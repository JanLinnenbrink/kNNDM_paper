geom_text(aes(label=paste("W=", scales::comma(round(Ws[[3]]))), x=12^5,y=0.6), size=5, col="grey40") +
theme_bw(base_size = base.size) +
theme(aspect.ratio = 1, legend.position = NaN,plot.margin = unit(rep(0.2,4), "cm"))
legend_bottom <- get_legend(rand_dist + theme_void() +
guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom"))
pts_cl_pl <- ggplot() +
geom_sf(data=AOI, alpha=0) +
geom_sf(data=ppoints, size=0.2, alpha=ppts.alpha) +
geom_sf(data=tpoints_cl,size=pts.size) +
scale_color_manual(values = c("blue","orange")) +
scale_x_continuous(breaks=c(-8,0)) +
scale_y_continuous(breaks=c(38,42)) +
theme_bw(base_size = base.size) +
theme(legend.position = "None",
strip.text.x = element_text(size = 12),
plot.margin = unit(rep(0.2,4), "cm")) +
facet_wrap(~cl)
pts_reg_pl <- ggplot() +
geom_sf(data=AOI, alpha=0) +
geom_sf(data=ppoints, size=0.2, alpha=ppts.alpha) +
geom_sf(data=tpoints_reg, size=pts.size) +
scale_color_manual(values= rainbow(10)) +
scale_x_continuous(breaks=c(-8,0)) +
scale_y_continuous(breaks=c(38,42)) +
theme_bw(base_size = base.size) +
theme(legend.position = "None",
strip.text.x = element_text(size = 12),
plot.margin = unit(rep(0.2,4), "cm")) +
facet_wrap(~cl)
pts_rand_pl <- ggplot() +
geom_sf(data=AOI, alpha=0) +
geom_sf(data=ppoints, size=0.2, alpha=ppts.alpha) +
geom_sf(data=tpoints_rand, size=pts.size) +
scale_x_continuous(breaks=c(-8,0)) +
scale_y_continuous(breaks=c(38,42)) +
theme_bw(base_size = base.size) +
theme(legend.position = "None",
strip.text.x = element_text(size = 12),
plot.margin = unit(rep(0.2,4), "cm")) +
facet_wrap(~cl)
top_row <- plot_grid(pts_reg_pl, pts_rand_pl, pts_cl_pl, nrow=1)
bottom_row <- plot_grid(reg_dist  + theme(plot.background = element_rect(fill = NA, colour = NA)),
rand_dist + theme(plot.background = element_rect(fill = NA, colour = NA)),
clust_dist + theme(plot.background = element_rect(fill = NA, colour = NA)), nrow=1)
comb_pl <- plot_grid(NULL, top_row, NULL, bottom_row, NULL,
legend_bottom, NULL,
nrow=7, rel_heights = c(-0.22,1, -0.42,1,-0.7,1,-0.45))
ggsave("figures/fig1_example_ecdfs_2.png", comb_pl, height = 12, width=20, units="cm")
comb_pl
ggsave("figures/fig1_example_ecdfs_2.png", comb_pl, height = 12, width=20.1, units="cm")
ggsave("figures/fig1_example_ecdfs_2.png", comb_pl, height = 12, width=21, units="cm")
ggsave("figures/fig1_example_ecdfs_2.png", comb_pl, height = 12, width=22, units="cm")
ggsave("figures/fig1_example_ecdfs_2.png", comb_pl, height = 12, width=20, units="cm")
comb_pl <- plot_grid(NULL,
top_row,
NULL,
bottom_row,
NULL,
legend_bottom,
NULL,
nrow=7,
rel_heights = c(-0.22,1, -0.42,1,-0.7,1,-0.45), greedy = TRUE)
ggsave("figures/fig1_example_ecdfs_2.png", comb_pl, height = 12, width=20, units="cm")
comb_pl <- plot_grid(NULL,
top_row,
NULL,
bottom_row,
NULL,
legend_bottom,
NULL,
nrow=7,
rel_heights = c(-0.22,1, -0.42,1,-0.7,1,-0.45), greedy = F)
ggsave("figures/fig1_example_ecdfs_2.png", comb_pl, height = 12, width=20, units="cm")
theme_bw()$plot.margin
comb_pl <- plot_grid(NULL,
top_row + theme(plot.margin = unit(c(5.5,6,5.5,5.5), "points")),
NULL,
bottom_row + theme(plot.margin = unit(c(5.5,6,5.5,5.5), "points")),
NULL,
legend_bottom + theme(plot.margin = unit(c(5.5,6,5.5,5.5), "points")),
NULL,
nrow=7,
rel_heights = c(-0.22,1, -0.42,1,-0.7,1,-0.45), )
legend_bottom + theme(plot.margin = unit(c(5.5,6,5.5,5.5), "points"))
comb_pl <- plot_grid(NULL,
top_row + theme(plot.margin = unit(c(5.5,6,5.5,5.5), "points")),
NULL,
bottom_row + theme(plot.margin = unit(c(5.5,6,5.5,5.5), "points")),
NULL,
legend_bottom,
NULL,
nrow=7,
rel_heights = c(-0.22,1, -0.42,1,-0.7,1,-0.45), )
bottom_row + theme(plot.margin = unit(c(5.5,6,5.5,5.5), "points"))
top_row + theme(plot.margin = unit(c(5.5,6,5.5,5.5), "points"))
plot_grid(NULL,
top_row + theme(plot.margin = unit(c(5.5,6,5.5,5.5), "points")),
NULL,
bottom_row + theme(plot.margin = unit(c(5.5,6,5.5,5.5), "points")))
comb_pl <- plot_grid(NULL,
top_row + theme(plot.margin = unit(c(5.5,6,5.5,5.5), "points")),
NULL,
bottom_row + theme(plot.margin = unit(c(5.5,6,5.5,5.5), "points")),
NULL,
legend_bottom,
NULL,
nrow=7,
rel_heights = c(-0.22,1, -0.42,1,-0.7,1,-0.45), )
plot_grid(NULL,
top_row + theme(plot.margin = unit(c(5.5,6,5.5,5.5), "points")))
comb_pl <- plot_grid(NULL,
top_row + theme(plot.margin = unit(c(5.5,6,5.5,5.5), "points")),
NULL,
bottom_row + theme(plot.margin = unit(c(5.5,6,5.5,5.5), "points")),
NULL,
legend_bottom,
NULL,
nrow=7,
rel_heights = c(-0.22,1, -0.42,1,-0.7,1,-0.45))
ggsave("figures/fig1_example_ecdfs_2.png", comb_pl, height = 12, width=20, units="cm")
comb_pl <- plot_grid(NULL,
top_row + theme(plot.margin = unit(c(5.5,5.8,5.5,5.5), "points")),
NULL,
bottom_row + theme(plot.margin = unit(c(5.5,5.8,5.5,5.5), "points")),
NULL,
legend_bottom,
NULL,
nrow=7,
rel_heights = c(-0.22,1, -0.42,1,-0.7,1,-0.45))
ggsave("figures/fig1_example_ecdfs_2.png", comb_pl, height = 12, width=20, units="cm")
comb_pl <- plot_grid(NULL,
top_row + theme(plot.margin = unit(c(5.5,5.6,5.5,5.5), "points")),
NULL,
bottom_row + theme(plot.margin = unit(c(5.5,5.6,5.5,5.5), "points")),
NULL,
legend_bottom,
NULL,
nrow=7,
rel_heights = c(-0.22,1, -0.42,1,-0.7,1,-0.45))
ggsave("figures/fig1_example_ecdfs_2.png", comb_pl, height = 12, width=20, units="cm")
comb_pl <- plot_grid(NULL,
top_row + theme(plot.margin = unit(c(5.5,5.5,5.5,5.5), "points")),
NULL,
bottom_row + theme(plot.margin = unit(c(5.5,5.5,5.5,5.5), "points")),
NULL,
legend_bottom,
NULL,
nrow=7,
rel_heights = c(-0.22,1, -0.42,1,-0.7,1,-0.45))
ggsave("figures/fig1_example_ecdfs_2.png", comb_pl, height = 12, width=20, units="cm")
ggsave("figures/fig6_results_W_err.pdf",comb, height=5, width=12)
library("ggplot2")
library("ggthemes")
library("cowplot")
library("dplyr")
library("tidyr")
library("forcats")
# read and process the simulation results
sim_res <- read.csv("simulation1_virtualSpecies/results/sim_res_k1.csv")
sim_diff <- data.frame(rmse_knndm = sim_res$RMSE_knndm - sim_res$RMSE_surf,
r2_knndm = sim_res$R2_knndm - sim_res$R2_surf,
mae_knndm = sim_res$MAE_knndm - sim_res$MAE_surf,
W_knndm = sim_res$W_knndmCV,
dsample = sim_res$dsample, k=sim_res$k) |>
pivot_longer(!c(dsample,k)) |>
mutate(distr = case_when(dsample == "sregular" ~ "Strongly~regular",
dsample == "wregular" ~ "Weakly~regular",
dsample == "random" ~ "Random",
dsample == "wclust" ~ "Weakly~clustered",
dsample == "sclust" ~ "Strongly~clustered"),
distr = as.factor(distr),
distr = fct_relevel(distr, c("Strongly~regular", "Weakly~regular", "Random",
"Weakly~clustered", "Strongly~clustered")),
CV_method = "kNNDM 10-fold",
group = case_when(startsWith(name, "rmse") ~ "CV-true~RMSE",
startsWith(name, "mae") ~ "CV-true~MAE",
startsWith(name, "r2") ~ "CV-true~R^2",
startsWith(name, "W_") ~ "W"),
group=fct_relevel(group, "CV-true~RMSE", "CV-true~R^2", "CV-true~MAE", "W")) |>
group_by(distr, k, group) |>
summarise_at(vars(value),
list(Q1=~quantile(., probs = 0.25),
median=median, Q3=~quantile(., probs = 0.75)))
lw <- 0.4
w <- 0.45
base.size <- 12
k_pl <- ggplot(sim_diff, aes(x=k, group=k)) +
geom_line(aes(y=median, group=distr), colour="navy") +
geom_point(aes(y=median), shape=21, size=0.8, colour="navy") +
geom_errorbar(aes(ymin=Q1, ymax=Q3),
width=0.4, linewidth=0.2, colour="navy") +
geom_hline(yintercept = 0) +
scale_y_continuous("") +
scale_x_continuous(breaks=seq(2,20,6)) +
xlab("k") +
theme_bw(base_size = base.size) +
theme(aspect.ratio = 1, legend.position = "None",
#axis.text.x = element_markdown(),
panel.grid.minor = element_blank()) +
facet_grid(rows=vars(group), cols=vars(distr),
scales="free_y", labeller=label_parsed)
ggsave("figures/fig7_diff_k.pdf", k_pl, height=6, width=8)
k_pl
library("ggplot2")
library("sf")
library("CAST")
library("cowplot")
source("simulation1_virtualSpecies/code/figures_utils.R")
source("simulation1_virtualSpecies/code/sim_functions.R")
distclust_proj <- function(tr_coords, folds){
alldist <- rep(NA, length(folds))
for(f in unique(folds)){
alldist[f == folds] <- c(FNN::knnx.dist(query = tr_coords[f == folds,,drop=FALSE],
data = tr_coords[f != folds,,drop=FALSE], k = 1))
}
alldist
}
AOI <- quiet(st_read(dsn="simulation1_virtualSpecies/data/species_vdata.gpkg", layer="sampling_polygon"))[1,]
AOI_part <- st_buffer(AOI, -200000)
set.seed(10)
tpoints_rand <- sim2_samples(100, "random", AOI)
set.seed(10)
tpoints_reg <- sim2_samples(100, "sregular", AOI)
set.seed(10)
tpoints_cl <-  sim2_samples(100, "sclust", AOI)
tpoints_cl$cl <- "clustered"
tpoints_rand$cl <- "random"
tpoints_reg$cl <- "regular"
tcoords_reg <- st_coordinates(tpoints_reg)[,1:2]
tcoords_rand <- st_coordinates(tpoints_rand)[,1:2]
tcoords_clust <- st_coordinates(tpoints_cl)[,1:2]
tp <- rbind(tpoints_rand, tpoints_cl)
set.seed(100)
ppoints <- st_sample(AOI, 500, type = "regular") |>
st_transform(st_crs(tpoints_rand))
ppoints_coords <- st_coordinates(ppoints)[,1:2]
set.seed(100)
folds_reg <- sample(1:10, nrow(tpoints_reg), replace=TRUE)
set.seed(100)
folds_rand <- sample(1:10, nrow(tpoints_rand), replace=TRUE)
set.seed(100)
folds_cl <- sample(1:10, nrow(tpoints_cl), replace=TRUE)
Gjstar_reg <- distclust_proj(tcoords_reg, folds_reg)
Gjstar_rand <- distclust_proj(tcoords_rand, folds_rand)
Gjstar_cl <- distclust_proj(tcoords_rand, folds_cl)
Gij_reg <- c(FNN::knnx.dist(query = ppoints_coords,
data = tcoords_reg, k = 1))
Gij_rand <- c(FNN::knnx.dist(query = ppoints_coords,
data = tcoords_rand, k = 1))
Gij_cl <- c(FNN::knnx.dist(query = ppoints_coords,
data = tcoords_clust, k = 1))
k_reg <- list("Gij"=Gij_reg, "Gjstar"=Gjstar_reg)
k_rand <- list("Gij"=Gij_rand, "Gjstar"=Gjstar_rand)
k_clust <- list("Gij"=Gij_cl, "Gjstar"=Gjstar_cl)
pts.size <- 1
ppts.alpha <- 0.5
base.size <- 12
Ws <- lapply(list(k_reg, k_rand,k_clust), function(x) twosamples::wass_stat(x$Gj, x$Gij))
reg_dist <- plot.knndm.integral(k_reg) +
scale_x_continuous(labels = function(x) format(x, scientific = TRUE),n.breaks = 3, limits=c(0,4*10^5)) +
geom_text(aes(label=paste("W=", scales::comma(round(Ws[[1]]))), x=12^5,y=0.6), size=5, col="grey40") +
xlab("r") +
theme_bw(base_size = base.size) +
theme(aspect.ratio = 1, legend.position = NaN,plot.margin = unit(rep(0.2,4), "cm"))
rand_dist <- plot.knndm.integral(k_rand) +
scale_x_continuous(labels = function(x) format(x, scientific = TRUE),n.breaks = 3, limits=c(0,4*10^5)) +
geom_text(aes(label=paste("W=", scales::comma(round(Ws[[2]]))), x=12^5,y=0.6), size=5, col="grey40") +
xlab("r") +
theme_bw(base_size = base.size) +
theme(aspect.ratio = 1, legend.position = NaN,plot.margin = unit(rep(0.2,4), "cm"))
clust_dist <- plot.knndm.integral(k_clust) +
scale_x_continuous(labels = function(x) format(x, scientific = TRUE),n.breaks = 3, limits=c(0,4*10^5)) +
xlab("r") +
geom_text(aes(label=paste("W=", scales::comma(round(Ws[[3]]))), x=12^5,y=0.6), size=5, col="grey40") +
theme_bw(base_size = base.size) +
theme(aspect.ratio = 1, legend.position = NaN,plot.margin = unit(rep(0.2,4), "cm"))
legend_bottom <- get_legend(rand_dist + theme_void() +
guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom"))
pts_cl_pl <- ggplot() +
geom_sf(data=AOI, alpha=0) +
geom_sf(data=ppoints, size=0.2, alpha=ppts.alpha) +
geom_sf(data=tpoints_cl,size=pts.size) +
scale_color_manual(values = c("blue","orange")) +
scale_x_continuous(breaks=c(-8,0)) +
scale_y_continuous(breaks=c(38,42)) +
theme_bw(base_size = base.size) +
theme(legend.position = "None",
strip.text.x = element_text(size = 12),
plot.margin = unit(rep(0.2,4), "cm")) +
facet_wrap(~cl)
pts_reg_pl <- ggplot() +
geom_sf(data=AOI, alpha=0) +
geom_sf(data=ppoints, size=0.2, alpha=ppts.alpha) +
geom_sf(data=tpoints_reg, size=pts.size) +
scale_color_manual(values= rainbow(10)) +
scale_x_continuous(breaks=c(-8,0)) +
scale_y_continuous(breaks=c(38,42)) +
theme_bw(base_size = base.size) +
theme(legend.position = "None",
strip.text.x = element_text(size = 12),
plot.margin = unit(rep(0.2,4), "cm")) +
facet_wrap(~cl)
pts_rand_pl <- ggplot() +
geom_sf(data=AOI, alpha=0) +
geom_sf(data=ppoints, size=0.2, alpha=ppts.alpha) +
geom_sf(data=tpoints_rand, size=pts.size) +
scale_x_continuous(breaks=c(-8,0)) +
scale_y_continuous(breaks=c(38,42)) +
theme_bw(base_size = base.size) +
theme(legend.position = "None",
strip.text.x = element_text(size = 12),
plot.margin = unit(rep(0.2,4), "cm")) +
facet_wrap(~cl)
top_row <- plot_grid(pts_reg_pl, pts_rand_pl, pts_cl_pl, nrow=1)
bottom_row <- plot_grid(reg_dist  + theme(plot.background = element_rect(fill = NA, colour = NA)), rand_dist + theme(plot.background = element_rect(fill = NA, colour = NA)), clust_dist + theme(plot.background = element_rect(fill = NA, colour = NA)), nrow=1)
theme_bw()$plot.margin
comb_pl <- plot_grid(NULL,
top_row + theme(plot.margin = unit(c(5.5,5.5,5.5,5.5), "points")),
NULL,
bottom_row + theme(plot.margin = unit(c(5.5,5.5,5.5,5.5), "points")),
NULL,
legend_bottom,
NULL,
nrow=7,
rel_heights = c(-0.22,1, -0.42,1,-0.7,1,-0.45))
ggsave("figures/fig1_example_ecdfs.png", comb_pl, height = 12, width=20, units="cm")
comb_pl
library("ggplot2")
library("dplyr")
library("forcats")
library("tidyr")
time_res <- bind_rows(read.csv("simulation1_virtualSpecies/results/time_res_sclust.csv"),
read.csv("simulation1_virtualSpecies/results/time_res_rand.csv")) |>
mutate(distr = case_when(dsample == "random" ~ "Random", dsample == "sclust" ~ "Strongly\nclustered"),
distr = as.factor(distr),
distr = fct_relevel(distr, c("Random", "Strongly\nclustered")))
names(time_res) <- c("dsample", "knndm_time_model", "nndm_time_model", "knndm_time_algorithm", "nndm_time_algorithm", "n_tpoints", "distr")
tm <- time_res |>
dplyr::select(-dsample) |>
mutate(knndm_total = knndm_time_algorithm + knndm_time_model,
nndm_total = nndm_time_algorithm + nndm_time_model) |>
group_by(n_tpoints, distr) |>
pivot_longer(!c(n_tpoints, distr)) |>
ungroup()
tm$what <- sub(pattern = ".*_", "", x = tm$name)
tm$type <- sub(pattern = "\\_.*", "", x = tm$name)
tp_ext <- ggplot(tm, aes(x=n_tpoints, y=value/3600, colour=type, group=what)) +
geom_point() +
facet_grid(distr~what) +
scale_colour_discrete(name="", labels=c("kNNDM 10-fold CV", "NNDM LOO CV")) +
scale_x_continuous(limits=c(0,4000), breaks=c(0,2000,4000)) +
scale_y_log10(labels = function(x) format(x, scientific = FALSE)) +
xlab("n training points") +
ylab("time [h]") +
theme_bw(base_size=15) +
theme(legend.position = "bottom")
tp_ext
#ggsave("figures/fig8_time_analysis.pdf", tp_ext, height=6, width=8.5)
tm |>
dplyr::filter(what=="total") |>
dplyr::select(-c("type", "what")) |>
pivot_wider(names_from=name, values_from=value) |>
mutate("time_diff" = (nndm_total-knndm_total)/(60^2)) |>
filter(n_tpoints==4000)
tm |>
dplyr::filter(what=="total") |>
dplyr::select(-c("type", "what")) |>
pivot_wider(names_from=name, values_from=value)
tm
tm |>
dplyr::filter(what=="total") |>
dplyr::select(-c("type", "what"))
tm |>
dplyr::filter(what=="total") |>
dplyr::select(-c("type", "what")) |>
pivot_wider(names_from=name, values_from=value)
tm |>
dplyr::filter(what=="total") |>
dplyr::select(-c("type", "what")) |>
pivot_wider(names_from=name, values_from=value) |>
summarise(reduction_mean = mean(nndm_total/knndm_total))
tm |>
dplyr::filter(what=="total") |>
dplyr::select(-c("type", "what")) |>
pivot_wider(names_from=name, values_from=value) |>
summarise(reduction_mean = mean(nndm_total/knndm_total),
reduction_sd = sd(nndm_total/knndm_total))
tm |>
dplyr::filter(what=="total") |>
dplyr::select(-c("type", "what")) |>
pivot_wider(names_from=name, values_from=value) |>
summarise(reduction_mean = mean(nndm_total/knndm_total),
reduction_sd = sd(nndm_total/knndm_total),
redicton_max = max(nndm_total/knndm_total))
tm |>
dplyr::filter(what=="total") |>
dplyr::select(-c("type", "what")) |>
pivot_wider(names_from=name, values_from=value) |>
summarise(reduction_mean = mean(nndm_total/knndm_total),
reduction_sd = sd(nndm_total/knndm_total),
rediction_max = max(nndm_total/knndm_total),
reduction_min = min(nndm_total/knndm_total))
tm_summary <- tm |>
dplyr::filter(what=="total") |>
dplyr::select(-c("type", "what")) |>
pivot_wider(names_from=name, values_from=value) |>
summarise(reduction_mean = mean(nndm_total/knndm_total),
reduction_sd = sd(nndm_total/knndm_total),
rediction_max = max(nndm_total/knndm_total),
reduction_min = min(nndm_total/knndm_total))
tm_summary$reduction_mean
tm_summary$reduction_mean |> round(1)
tm_summary$reduction_mean |> round(0)
tm_summary$reduction_sd |> round(0)
print(paste0("mean reduction = ", tm_summary$reduction_mean |> round(0),
"sd of the reduction = ", tm_summary$reduction_sd |> round(0)))
print(paste0("mean reduction = ", tm_summary$reduction_mean |> round(0),
" ; sd of the reduction = ", tm_summary$reduction_sd |> round(0)))
print(paste0("mean reduction = ", tm_summary$reduction_mean |> round(0),
"; sd of the reduction = ", tm_summary$reduction_sd |> round(0)))
tm_summary <- tm |>
dplyr::filter(what=="total") |>
dplyr::select(-c("type", "what")) |>
pivot_wider(names_from=name, values_from=value) |>
summarise(reduction_mean = mean(nndm_total/knndm_total),
reduction_sd = sd(nndm_total/knndm_total),
reduction_max = max(nndm_total/knndm_total),
reduction_min = min(nndm_total/knndm_total))
(tm_summary <- tm |>
dplyr::filter(what=="total") |>
dplyr::select(-c("type", "what")) |>
pivot_wider(names_from=name, values_from=value) |>
summarise(reduction_mean = mean(nndm_total/knndm_total),
reduction_sd = sd(nndm_total/knndm_total),
reduction_max = max(nndm_total/knndm_total),
reduction_min = min(nndm_total/knndm_total))
)
library("ggplot2")
library("dplyr")
library("forcats")
library("tidyr")
time_res <- bind_rows(read.csv("simulation1_virtualSpecies/results/time_res_sclust.csv"),
read.csv("simulation1_virtualSpecies/results/time_res_rand.csv")) |>
mutate(distr = case_when(dsample == "random" ~ "Random", dsample == "sclust" ~ "Strongly\nclustered"),
distr = as.factor(distr),
distr = fct_relevel(distr, c("Random", "Strongly\nclustered")))
names(time_res) <- c("dsample", "knndm_time_model", "nndm_time_model", "knndm_time_algorithm", "nndm_time_algorithm", "n_tpoints", "distr")
tm <- time_res |>
dplyr::select(-dsample) |>
mutate(knndm_total = knndm_time_algorithm + knndm_time_model,
nndm_total = nndm_time_algorithm + nndm_time_model) |>
group_by(n_tpoints, distr) |>
pivot_longer(!c(n_tpoints, distr)) |>
ungroup()
tm$what <- sub(pattern = ".*_", "", x = tm$name)
tm$type <- sub(pattern = "\\_.*", "", x = tm$name)
tp_ext <- ggplot(tm, aes(x=n_tpoints, y=value/3600, colour=type, group=what)) +
geom_point() +
facet_grid(distr~what) +
scale_colour_discrete(name="", labels=c("kNNDM 10-fold CV", "NNDM LOO CV")) +
scale_x_continuous(limits=c(0,4000), breaks=c(0,2000,4000)) +
scale_y_log10(labels = function(x) format(x, scientific = FALSE)) +
xlab("n training points") +
ylab("time [h]") +
theme_bw(base_size=15) +
theme(legend.position = "bottom")
tp_ext
#ggsave("figures/fig8_time_analysis.pdf", tp_ext, height=6, width=8.5)
tm |>
dplyr::filter(what=="total") |>
dplyr::select(-c("type", "what")) |>
pivot_wider(names_from=name, values_from=value) |>
mutate("time_diff" = (nndm_total-knndm_total)/(60^2)) |>
filter(n_tpoints==4000)
(tm_summary <- tm |>
dplyr::filter(what=="total") |>
dplyr::select(-c("type", "what")) |>
pivot_wider(names_from=name, values_from=value) |>
summarise(reduction_mean = mean(nndm_total/knndm_total),
reduction_sd = sd(nndm_total/knndm_total),
reduction_max = max(nndm_total/knndm_total),
reduction_min = min(nndm_total/knndm_total)))
print(paste0("mean reduction = ", tm_summary$reduction_mean |> round(0),
"; sd of the reduction = ", tm_summary$reduction_sd |> round(0)))
tp_ext
tm |>
dplyr::filter(what=="total") |>
dplyr::select(-c("type", "what")) |>
pivot_wider(names_from=name, values_from=value) |>
mutate("time_diff" = (nndm_total-knndm_total)/(60^2)) |>
filter(n_tpoints==4000)
tm |>
dplyr::filter(what=="total") |>
dplyr::select(-c("type", "what")) |>
pivot_wider(names_from=name, values_from=value) |>
mutate(
"knndm_total" = knndm_total/(60^2),
"nndm_total" =  nndm_total/(60^2),
"time_diff" = (nndm_total-knndm_total)) |>
filter(n_tpoints==4000)
60*0.02
114/24
0.02/60
0.02*60
0.008*60
0.00795*60
0.00795*60^2
0.00795*(60^2)
0.00795*60
0.477 * 60
