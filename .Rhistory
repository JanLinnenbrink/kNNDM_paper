RMSE   <- RMSE
if(m == "knndm_tuned_clStr" | m == "knndm_tuned_clGapped") {
RMSE <- k_err_tuned$RMSE
m <- "knndm_tuned"
k <- k_err_tuned$k
} else {
k <- NaN
}
newrow <- data.frame(method = m, variate = variate, design = design,
number = number, RMSE = RMSE, k=k)
outtab <- rbind(outtab, newrow)
}
}
outtab$methodID <- with(outtab, ifelse(method=="exhaustive",0,1))
outtab$rRMSE <- NA
numbers=1:100
outtab[outtab$method=="knndm_tuned",]
outtab[outtab$method=="knndm",]
infolder  <- "simulation2_AGB/results/"
outfolder <- "figures"
mets <- c("exhaustive", "random", "spatial", "knndm",
"knndm_tuned_clStr", "knndm_tuned_clGapped")
colnms <- c("method", "variate", "design", "number", "RMSE", "k")
outtab <- data.frame(matrix(NA, 0, 6))
names(outtab) <- colnms
for(m in mets){
p <- file.path(infolder, m)
f_ins <- list.files(p, glob2rx("???_*.Rdata"))
for(f_in in f_ins){
lchar <- nchar(f_in)
variate <- substr(f_in, 1, 3)
design <- substr(f_in, 5, lchar-9)
number <- as.numeric(substr(f_in, lchar-8, lchar-6))
load(file.path(p, f_in))
RMSE   <- RMSE
if(m == "knndm_tuned_clStr" | m == "knndm_tuned_clGapped") {
RMSE <- k_err_tuned$RMSE
m <- "knndm_tuned"
k <- k_err_tuned$k
print(RMSE)
} else {
k <- NaN
}
newrow <- data.frame(method = m, variate = variate, design = design,
number = number, RMSE = RMSE, k=k)
outtab <- rbind(outtab, newrow)
}
}
mets
m="knndm_tuned_clStr"
p <- file.path(infolder, m)
f_ins <- list.files(p, glob2rx("???_*.Rdata"))
f_ins
f_in=f_ins[[1]]
lchar <- nchar(f_in)
variate <- substr(f_in, 1, 3)
design <- substr(f_in, 5, lchar-9)
number <- as.numeric(substr(f_in, lchar-8, lchar-6))
load(file.path(p, f_in))
RMSE   <- RMSE
design <- substr(f_in, 5, lchar-9)
number <- as.numeric(substr(f_in, lchar-8, lchar-6))
load(file.path(p, f_in))
if(m == "knndm_tuned_clStr" | m == "knndm_tuned_clGapped") {
RMSE <- k_err_tuned$RMSE
m <- "knndm_tuned"
k <- k_err_tuned$k
print(RMSE)
} else {
k <- NaN
RMSE   <- RMSE
}
k_err_tuned
RMSE
infolder  <- "simulation2_AGB/results/"
outfolder <- "figures"
mets <- c("exhaustive", "random", "spatial", "knndm",
"knndm_tuned_clStr", "knndm_tuned_clGapped")
colnms <- c("method", "variate", "design", "number", "RMSE", "k")
outtab <- data.frame(matrix(NA, 0, 6))
names(outtab) <- colnms
for(m in mets){
p <- file.path(infolder, m)
f_ins <- list.files(p, glob2rx("???_*.Rdata"))
for(f_in in f_ins){
lchar <- nchar(f_in)
variate <- substr(f_in, 1, 3)
design <- substr(f_in, 5, lchar-9)
number <- as.numeric(substr(f_in, lchar-8, lchar-6))
load(file.path(p, f_in))
if(m == "knndm_tuned_clStr" | m == "knndm_tuned_clGapped") {
RMSE <- k_err_tuned$RMSE
m <- "knndm_tuned"
k <- k_err_tuned$k
print(RMSE)
} else {
k <- NaN
RMSE   <- RMSE
}
newrow <- data.frame(method = m, variate = variate, design = design,
number = number, RMSE = RMSE, k=k)
outtab <- rbind(outtab, newrow)
}
}
outtab$methodID <- with(outtab, ifelse(method=="exhaustive",0,1))
outtab$rRMSE <- NA
numbers=1:100
for(design in unique(outtab$design)){
for(number in numbers){
idx1 <- which(outtab$design == design & outtab$number == number)
idx2 <- which(outtab$design == design & outtab$methodID == 0 & outtab$number == number)
outtab$rRMSE[idx1] <- outtab$RMSE[idx1] - outtab$RMSE[idx2]
}
}
outtab[outtab$method=="knndm_tuned",]
load("~/git/kNNDM_paper/simulation2_AGB/results/knndm_tuned_clStr/AGB_clusterStrong005.Rdata")
View(k_err_tuned)
load("~/git/kNNDM_paper/simulation2_AGB/results/knndm_tuned_clStr/AGB_clusterStrong001.Rdata")
load("~/git/kNNDM_paper/simulation2_AGB/results/knndm_tuned_clStr/AGB_clusterStrong002.Rdata")
View(k_err_tuned)
infolder  <- "simulation2_AGB/results/"
outfolder <- "figures"
mets <- c("exhaustive", "random", "spatial", "knndm",
"knndm_tuned_clStr", "knndm_tuned_clGapped")
colnms <- c("method", "variate", "design", "number", "RMSE", "k")
outtab <- data.frame(matrix(NA, 0, 6))
names(outtab) <- colnms
for(m in mets){
p <- file.path(infolder, m)
f_ins <- list.files(p, glob2rx("???_*.Rdata"))
for(f_in in f_ins){
lchar <- nchar(f_in)
variate <- substr(f_in, 1, 3)
design <- substr(f_in, 5, lchar-9)
number <- as.numeric(substr(f_in, lchar-8, lchar-6))
load(file.path(p, f_in))
if(m == "knndm_tuned_clStr" | m == "knndm_tuned_clGapped") {
print(variate)
print(number)
print(design)
RMSE <- k_err_tuned$RMSE
m <- "knndm_tuned"
k <- k_err_tuned$k
print(RMSE)
} else {
k <- NaN
RMSE   <- RMSE
}
newrow <- data.frame(method = m, variate = variate, design = design,
number = number, RMSE = RMSE, k=k)
outtab <- rbind(outtab, newrow)
}
}
infolder  <- "simulation2_AGB/results/"
outfolder <- "figures"
mets <- c("exhaustive", "random", "spatial", "knndm",
"knndm_tuned_clStr", "knndm_tuned_clGapped")
colnms <- c("method", "variate", "design", "number", "RMSE", "k")
outtab <- data.frame(matrix(NA, 0, 6))
names(outtab) <- colnms
for(m in mets){
p <- file.path(infolder, m)
f_ins <- list.files(p, glob2rx("???_*.Rdata"))
for(f_in in f_ins){
lchar <- nchar(f_in)
variate <- substr(f_in, 1, 3)
design <- substr(f_in, 5, lchar-9)
number <- as.numeric(substr(f_in, lchar-8, lchar-6))
load(file.path(p, f_in))
if(m == "knndm_tuned_clStr" | m == "knndm_tuned_clGapped") {
print(variate)
print(number)
print(design)
RMSE <- k_err_tuned$RMSE
m <- "knndm_tuned"
k <- k_err_tuned$k
print(RMSE)
} else {
k <- NaN
RMSE   <- RMSE
print(variate)
print(number)
print(design)
}
newrow <- data.frame(method = m, variate = variate, design = design,
number = number, RMSE = RMSE, k=k)
outtab <- rbind(outtab, newrow)
}
}
for(m in mets){
p <- file.path(infolder, m)
f_ins <- list.files(p, glob2rx("???_*.Rdata"))
for(f_in in f_ins){
lchar <- nchar(f_in)
variate <- substr(f_in, 1, 3)
design <- substr(f_in, 5, lchar-9)
number <- as.numeric(substr(f_in, lchar-8, lchar-6))
load(file.path(p, f_in))
if(m == "knndm_tuned_clStr" | m == "knndm_tuned_clGapped") {
print(f_in)
RMSE <- k_err_tuned$RMSE
m <- "knndm_tuned"
k <- k_err_tuned$k
print(RMSE)
} else {
k <- NaN
RMSE   <- RMSE
}
newrow <- data.frame(method = m, variate = variate, design = design,
number = number, RMSE = RMSE, k=k)
outtab <- rbind(outtab, newrow)
}
}
f_ins
p
for(f_in in f_ins){
lchar <- nchar(f_in)
variate <- substr(f_in, 1, 3)
design <- substr(f_in, 5, lchar-9)
number <- as.numeric(substr(f_in, lchar-8, lchar-6))
load(file.path(p, f_in))
if(m == "knndm_tuned_clStr" | m == "knndm_tuned_clGapped") {
RMSE <- k_err_tuned$RMSE
m <- "knndm_tuned"
k <- k_err_tuned$k
print(RMSE)
} else {
k <- NaN
RMSE   <- RMSE
}
newrow <- data.frame(method = m, variate = variate, design = design,
number = number, RMSE = RMSE, k=k)
outtab <- rbind(outtab, newrow)
}
RMSE
k_err_tuned
rm(k_err_tuned)
for(m in mets){
p <- file.path(infolder, m)
f_ins <- list.files(p, glob2rx("???_*.Rdata"))
for(f_in in f_ins){
lchar <- nchar(f_in)
variate <- substr(f_in, 1, 3)
design <- substr(f_in, 5, lchar-9)
number <- as.numeric(substr(f_in, lchar-8, lchar-6))
load(file.path(p, f_in))
if(m == "knndm_tuned_clStr" | m == "knndm_tuned_clGapped") {
RMSE <- k_err_tuned$RMSE
m <- "knndm_tuned"
k <- k_err_tuned$k
print(RMSE)
} else {
k <- NaN
RMSE   <- RMSE
}
newrow <- data.frame(method = m, variate = variate, design = design,
number = number, RMSE = RMSE, k=k)
outtab <- rbind(outtab, newrow)
}
}
for(m in mets){
p <- file.path(infolder, m)
f_ins <- list.files(p, glob2rx("???_*.Rdata"))
for(f_in in f_ins){
lchar <- nchar(f_in)
variate <- substr(f_in, 1, 3)
design <- substr(f_in, 5, lchar-9)
number <- as.numeric(substr(f_in, lchar-8, lchar-6))
load(file.path(p, f_in))
print(number)
if(m == "knndm_tuned_clStr" | m == "knndm_tuned_clGapped") {
RMSE <- k_err_tuned$RMSE
m <- "knndm_tuned"
k <- k_err_tuned$k
print(RMSE)
} else {
k <- NaN
RMSE   <- RMSE
}
newrow <- data.frame(method = m, variate = variate, design = design,
number = number, RMSE = RMSE, k=k)
outtab <- rbind(outtab, newrow)
}
}
for(f_in in f_ins){
f_in
f_ins
p
lchar <- nchar(f_in)
variate <- substr(f_in, 1, 3)
design <- substr(f_in, 5, lchar-9)
number <- as.numeric(substr(f_in, lchar-8, lchar-6))
file.path(p, f_in)
load(file.path(p, f_in))
View(k_err_tuned)
if(m == "knndm_tuned_clStr" | m == "knndm_tuned_clGapped") {
RMSE <- k_err_tuned$RMSE
m <- "knndm_tuned"
k <- k_err_tuned$k
print(RMSE)
} else {
k <- NaN
RMSE   <- RMSE
}
RMSE
m == "knndm_tuned_clStr"
m == "knndm_tuned_clGapped"
m
infolder  <- "simulation2_AGB/results/"
outfolder <- "figures"
mets <- c("exhaustive", "random", "spatial", "knndm",
"knndm_tuned_clStr", "knndm_tuned_clGapped")
colnms <- c("method", "variate", "design", "number", "RMSE", "k")
outtab <- data.frame(matrix(NA, 0, 6))
names(outtab) <- colnms
for(m in mets){
p <- file.path(infolder, m)
f_ins <- list.files(p, glob2rx("???_*.Rdata"))
for(f_in in f_ins){
lchar <- nchar(f_in)
variate <- substr(f_in, 1, 3)
design <- substr(f_in, 5, lchar-9)
number <- as.numeric(substr(f_in, lchar-8, lchar-6))
load(file.path(p, f_in))
if(m == "knndm_tuned_clStr" | m == "knndm_tuned_clGapped") {
RMSE <- k_err_tuned$RMSE
m_new <- "knndm_tuned"
k <- k_err_tuned$k
print(RMSE)
} else {
k <- NaN
RMSE   <- RMSE
m_new <- m
}
newrow <- data.frame(method = m_new, variate = variate, design = design,
number = number, RMSE = RMSE, k=k)
outtab <- rbind(outtab, newrow)
}
}
outtab$methodID <- with(outtab, ifelse(method=="exhaustive",0,1))
outtab$rRMSE <- NA
numbers=1:100
for(design in unique(outtab$design)){
for(number in numbers){
idx1 <- which(outtab$design == design & outtab$number == number)
idx2 <- which(outtab$design == design & outtab$methodID == 0 & outtab$number == number)
outtab$rRMSE[idx1] <- outtab$RMSE[idx1] - outtab$RMSE[idx2]
}
}
outtab[outtab$method=="knndm_tuned",]
write.csv(outtab, file.path(infolder, "outtab100.csv"))
#| fig-align: center
#| fig-width: 5
library(ggplot2)
library(ggthemes)
mets <- c("exhaustive", "random", "spatial", "knndm",
"knndm_tuned")
outtab <- read.csv("simulation2_AGB/results/outtab100.csv")
outtab$method <- factor(outtab$method, levels=mets)
outtab$design <- factor(outtab$design, levels=c("regular", "simpleRandom", "clusterMedium",
"clusterStrong", "clusterGapped"))
outtab$variate <- as.factor(outtab$variate)
CVmethod_labs <- c("random", "spatial", "kNNDM", "kNNDM [tuned]")
xlabs <- c("regular","random","weak\nclustered","medium\nclustered","strong\nclustered")
lw <- 0.6
w <- 0.45
diff_RMSE <- ggplot(outtab[outtab$methodID!=0,], aes(x=design, y=rRMSE, colour=method, linetype=method)) +
geom_boxplot(lwd=lw, width=w,position=position_dodge(0.6)) +
geom_hline(yintercept = 0, linetype="solid", alpha=0.6) +
scale_colour_manual(values = c("black", "#E69F00", "#009E73", "#009E73"),name="CV method", labels=CVmethod_labs) +
scale_linetype_manual(values=c("solid", "solid", "solid", "dashed"),name="CV method", labels=CVmethod_labs) +
scale_x_discrete(labels=xlabs) +
ylab("CV - true RMSE") +
xlab("") +
scale_y_continuous(breaks=c(-15,-10,-5,0,5,10)) +
theme_bw() +
theme(legend.position = "bottom")
#ggsave("figures/fig10_RMSE_diff_AGB.pdf", diff_RMSE, height = unit(4, "cm"), width=unit(6, "cm"))
diff_RMSE
diff_RMSE
setwd("simulation2_AGB/")
library(caret)
library(CAST)
library(terra)
library(parallel)
# *****************************************************************************
# R Script implementing exhaustive validation, which is used as the reference.
# Modified from https://doi.org/10.5281/zenodo.6514923
# Due to the long run-time, this script calculates the reference for 1 realization
# of each sampling design, and thus this script needs to be run 100 times.
# *****************************************************************************
# ****** load required libraries *******
#Sys.sleep(round(runif(1, min = 1, max = 240)))
#.libPaths("~/r_packages/")
setwd("simulation2_AGB/")
outfolder
getwd()
getwd()
warnings()
source("code/knndm_W.R")
infolder  <- "simulation2_AGB/results/"
outfolder <- "figures"
mets <- c("exhaustive", "random", "spatial", "knndm", "knndm_tuned")
colnms <- c("method", "variate", "design", "number", "RMSE", "k")
outtab <- data.frame(matrix(NA, 0, 6))
names(outtab) <- colnms
for(m in mets){
p <- file.path(infolder, m)
f_ins <- list.files(p, glob2rx("???_*.Rdata"))
for(f_in in f_ins){
lchar <- nchar(f_in)
variate <- substr(f_in, 1, 3)
design <- substr(f_in, 5, lchar-9)
number <- as.numeric(substr(f_in, lchar-8, lchar-6))
load(file.path(p, f_in))
if(m == "knndm_tuned") {
RMSE <- k_err_tuned$RMSE
k <- k_err_tuned$k
} else {
k <- NaN
RMSE   <- RMSE
}
newrow <- data.frame(method = m, variate = variate, design = design,
number = number, RMSE = RMSE, k=k)
outtab <- rbind(outtab, newrow)
}
}
outtab$methodID <- with(outtab, ifelse(method=="exhaustive",0,1))
outtab$rRMSE <- NA
infolder  <- "simulation2_AGB/results/"
outfolder <- "figures"
mets <- c("exhaustive", "random", "spatial", "knndm", "knndm_tuned")
colnms <- c("method", "variate", "design", "number", "RMSE", "k")
outtab <- data.frame(matrix(NA, 0, 6))
names(outtab) <- colnms
for(m in mets){
p <- file.path(infolder, m)
f_ins <- list.files(p, glob2rx("???_*.Rdata"))
for(f_in in f_ins){
lchar <- nchar(f_in)
variate <- substr(f_in, 1, 3)
design <- substr(f_in, 5, lchar-9)
number <- as.numeric(substr(f_in, lchar-8, lchar-6))
load(file.path(p, f_in))
if(m == "knndm_tuned") {
RMSE <- k_err_tuned$RMSE
k <- k_err_tuned$k
} else {
k <- NaN
RMSE   <- RMSE
}
newrow <- data.frame(method = m, variate = variate, design = design,
number = number, RMSE = RMSE, k=k)
outtab <- rbind(outtab, newrow)
}
}
outtab$methodID <- with(outtab, ifelse(method=="exhaustive",0,1))
outtab$rRMSE <- NA
outtab
infolder  <- "simulation2_AGB/results/"
outfolder <- "figures"
mets <- c("exhaustive", "random", "spatial", "knndm", "knndm_tuned")
colnms <- c("method", "variate", "design", "number", "RMSE", "k")
outtab <- data.frame(matrix(NA, 0, 6))
names(outtab) <- colnms
mets
m = "knndm_tuned"
p <- file.path(infolder, m)
f_ins <- list.files(p, glob2rx("???_*.Rdata"))
f_ins
p
infolder  <- "simulation2_AGB/results"
p <- file.path(infolder, m)
f_ins <- list.files(p, glob2rx("???_*.Rdata"))
f_ins
p
m = "knndm_tuned/"
p <- file.path(infolder, m)
f_ins <- list.files(p, glob2rx("???_*.Rdata"))
f_ins
p
getwd()
infolder  <- "simulation2_AGB/results"
outfolder <- "figures"
mets <- c("exhaustive", "random", "spatial", "knndm", "knndm_tuned")
colnms <- c("method", "variate", "design", "number", "RMSE", "k")
outtab <- data.frame(matrix(NA, 0, 6))
names(outtab) <- colnms
for(m in mets){
p <- file.path(infolder, m)
f_ins <- list.files(p, glob2rx("???_*.Rdata"))
for(f_in in f_ins){
lchar <- nchar(f_in)
variate <- substr(f_in, 1, 3)
design <- substr(f_in, 5, lchar-9)
number <- as.numeric(substr(f_in, lchar-8, lchar-6))
load(file.path(p, f_in))
if(m == "knndm_tuned") {
RMSE <- k_err_tuned$RMSE
k <- k_err_tuned$k
} else {
k <- NaN
RMSE   <- RMSE
}
newrow <- data.frame(method = m, variate = variate, design = design,
number = number, RMSE = RMSE, k=k)
outtab <- rbind(outtab, newrow)
}
}
outtab$methodID <- with(outtab, ifelse(method=="exhaustive",0,1))
outtab$rRMSE <- NA
getwd()
